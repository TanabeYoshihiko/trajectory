<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rolling Circle Animation with Path</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        canvas {
            background-color: #ffffff;
        }
    </style>
</head>
<body>
    <canvas id="canvas" width="1600" height="400"></canvas>
    <script>
        const canvas = document.getElementById('canvas');
        const ctx = canvas.getContext('2d');
        
        const radius = 80; // Larger radius of the circle
        const pathLength = canvas.width; // Length of the straight path
        const centerY = canvas.height / 2; // Center Y-coordinate of the path
        let circleX = 0; // Initial X-coordinate of the circle
        const speed = 2; // Speed of the rolling circle
        const pathPoints = []; // Array to store path points

        function drawCircle(x, y, r) {
            ctx.beginPath();
            ctx.arc(x, y, r, 0, Math.PI * 2);
            ctx.strokeStyle = 'black'; // Circle color
            ctx.stroke();
        }

        function drawPath() {
            ctx.beginPath();
            ctx.moveTo(0, centerY);
            ctx.lineTo(pathLength, centerY);
            ctx.strokeStyle = 'black'; // Path color
            ctx.stroke();
        }

        function drawTrace() {
            ctx.beginPath();
            for (let i = 0; i < pathPoints.length; i++) {
                if (i === 0) {
                    ctx.moveTo(pathPoints[i].x, pathPoints[i].y);
                } else {
                    ctx.lineTo(pathPoints[i].x, pathPoints[i].y);
                }
            }
            ctx.strokeStyle = 'red'; // Trace color
            ctx.stroke();
        }

        function animate() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawPath();
            drawTrace();
            drawCircle(circleX, centerY - radius, radius);
            pathPoints.push({ x: circleX, y: centerY - radius });
            circleX += speed;
            if (circleX - radius <= pathLength) {
                requestAnimationFrame(animate);
            }
        }

        animate();
    </script>
</body>
</html>
